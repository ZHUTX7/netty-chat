
mapper:
  identity: MYSQL
  mappers: com.zzz.pro.utils.MyMapper
  not-empty: false
mybatis:
  mapper-locations: classpath:mapperXML/*.xml
  type-aliases-package: com.zzz.pro.pojo.dto
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
pagehelper:
  helperDialect: mysql
  params: count=countSql
  supportMethodsArguments: true

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    password: XXXX
    url: jdbc:mysql://localhost:3306/XXXX?useSSL=false&characterEncoding=UTF-8&autoReconnect=true
    username: root
  # Kafka 配置项，对应 KafkaProperties 配置类
  kafka:
    bootstrap-servers: xXXXXX:9092 # 指定 Kafka Broker 地址，可以设置多个，以逗号分隔
    # Kafka Consumer 配置项
    consumer:
      auto-offset-reset: earliest # 设置消费者分组最初的消费进度为 earliest 。可参考博客 https://blog.csdn.net/lishuangzhe7047/article/details/74530417 理解
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.zzz.pro.pojo.dto # 信任该包下所有类
    # Kafka Consumer Listener 监听器配置
    listener:
      missing-topics-fatal: false # 消费监听接口监听的主题不存在时，默认会报错。所以通过设置为 false ，解决报错
logging:
  level:
    org:
      springframework:
        kafka: ERROR # spring-kafka INFO 日志太多了，所以我们限制只打印 ERROR 级别
      apache:
        kafka: ERROR # kafka INFO 日志太多了，所以我们限制只打印 ERROR 级别
